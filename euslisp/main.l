(load "package://pr2eus/pr2-interface.l")
(load "package://elevator/euslisp/utils.l")
(load "package://jsk_maps/src/change-floor.l")

(defun speech-cb (msg)
  (setq *speech* (send msg :data))
  (ros::ros-info (format nil "~A" *speech*)))

(ros::roseus "navigation")
(initialize)
(ros::subscribe "/speech_recognition/final_result" std_msgs::String #'speech-cb 1)

(defun navigation ()
  (setq goal (wait-for-destination))
  (setq if-elevator-needed (check-elevator-needed goal))
  (setq target-floor (elt if-elevator-needed 1))
  ;; (pr2-tuckarm-pose)
  (if (null (elt if-elevator-needed 2))
    (send *ri* :move-to goal)
    (progn
      (setq elevator-spot (send *scene* :spot 
				(format nil "~A/elevator-outside" (elt if-elevator-needed 0))))
      (send *ri* :speak-jp "エレベータに向かいます" :wait t)
      ;; (send *ri* :move-to elevator-spot)
      (send *ri* :speak-jp "エレベータにつきました" :wait t)
      (setq outside-button (elt if-elevator-needed 2))
      (send *ri* :speak-jp (format nil "~Aボタンを押して下さい" outside-button) :wait t)
      ;; (send *pr2* :larm :angle-vector #f(44.3333 36.9321 9.03022 -121.342 -133.409 -92.8499 -19.1599))
      ;; (send *ri* :angle-vector (send *pr2* :angle-vector))
      ;; (send *ri* :wait-interpolation)
      ;; (ros::service-call "lead_pr2/start" (instance std_srvs::EmptyRequest :init))
      (setq inside-button (string-left-trim "/eng8" target-floor))
      (ros::ros-info (format nil "button: ~A" inside-button))
      (send *ri* :speak-jp (format nil "エレベータが来たら私を乗せて~Aボタンを押して下さい" inside-button) :wait t)
      (wait-for-arrival)
      (change-floor target-floor)
      (ros::ros-info (format nil "change-floor: ~A" target-floor))
      ;; (ros::service-call "lead_pr2/stop" (instance std_srvs::EmptyRequest :init))
      ;; (pr2-tuckarm-pose)
      (send *ri* :speak-jp "移動します" :wait t)
      ;; (send *ri* :move-to goal)
      ))
    (send *ri* :speak-jp "到着しました" :wait t))
    

(while t
  (ros::spin-once)
  (navigation))
